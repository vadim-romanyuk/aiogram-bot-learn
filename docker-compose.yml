version: '3.3'

services:
  db:
    container_name: bot_learn
    image: sameersbn/postgresql:12-20200524
    environment:
      PG_PASSWORD: $POSTGRES_PASSWORD
    restart: always
    ports:
      - '5432:5432'
    networks:
      - botnet
    volumes:
      - ./postgresql:/var/lib/postgresql


  tgbot:
    container_name: bot
    build:
      context: .
    command: python bot.py
    restart: always
    networks:
      - botnet
    env_file:
      - ".env"
    volumes:
      - .:/src
    depends_on:
      - db



networks:
  botnet:
    driver: bridge











#      - "5439:5432"
#    restart: always
#    volumes:
#      - "./pgdata:/var/lib/postgresql/data"
#    command: "postgres -c max_connections=150
#                -c shared_buffers=512MB -c effective_cache_size=1536MB
#                -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
#                -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
#                -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
#                -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"
#    env_file:
#      - '.env'
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "200k"
#        max-file: "10"
#    networks:
#      - tg_bot
#
#  bot:
#    image: "${BOT_IMAGE_NAME:-tg_bot-image}"
#    container_name: "${BOT_CONTAINER_NAME:-tg_bot-container}"
#    stop_signal: SIGINT
#    build:
#      context: .
#    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
#    volumes:
#    - .:/usr/src/app/${BOT_NAME:-tg_bot}
#    command: python3 -m bot
#    restart: always
#    env_file:
#      - ".env"
#    networks:
#    - tg_bot
#    depends_on:
#      - pg_database
#
#networks:
#  tg_bot:
#    driver: bridge